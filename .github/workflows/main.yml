name: CI

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - master

jobs:
  build-and-test:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, macos-10.15]
        python-version: [2.7, 3.5, 3.6, 3.8]
        compiler: [gcc, clang]
        exclude:
          - os: macos-10.15
            compiler: gcc
    steps:
    - uses: actions/checkout@v2
    - name: Install newer clang (ubuntu)
      if: startsWith(matrix.os, 'ubuntu') && matrix.compiler == 'clang'
      run: |
        wget -O - https://apt.llvm.org/llvm-snapshot.gpg.key 2>/dev/null | sudo apt-key add -
        sudo add-apt-repository 'deb http://apt.llvm.org/bionic/ llvm-toolchain-bionic-9 main' -y
        sudo apt-get update -q
        sudo apt-get install -y clang-9 lld-9 libc++-9-dev libc++abi-9-dev clang-tools-9
        echo ::set-env name=AR::llvm-ar-9
    - name: Install newer clang (macos)
      if: startsWith(matrix.os, 'macos') && matrix.compiler == 'clang'
      run: |
        brew install llvm
    - name: Checkout submodules
      shell: bash
      run: |
        # If your submodules are configured to use SSH instead of HTTPS please uncomment the following line
        git config --global url."https://github.com/".insteadOf "git@github.com:"
        auth_header="$(git config --local --get http.https://github.com/.extraheader)"
        git submodule sync --recursive
        git -c "http.extraheader=$auth_header" -c protocol.version=2 submodule update --init --force --recursive --depth=1
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install python dependencies
      env:
        PYTHONWARNINGS: ignore:DEPRECATION::pip._internal.cli.base_command
      run: |
        python -m pip install --upgrade pip
        pip install pytest==4.4.1 numpy==1.13.3
    - name: Install c++ dependencies (ubuntu)
      if: startsWith(matrix.os, 'ubuntu')
      run: |
        sudo apt-get -y install libpcre2-dev libsparsehash-dev
    - name: Install c++ dependencies (macos)
      if: startsWith(matrix.os, 'macos')
      run: |
        brew install pcre2 google-sparsehash
    - name: Set llvm related envvars (macos)
      if: startsWith(matrix.os, 'macos')
      run: |
        echo ::set-env name=EXTRA_INCLUDE_DIRS::/usr/local/include/
        echo ::add-path::/usr/local/opt/llvm/bin
        echo ::set-env name=LDFLAGS::-L/usr/local/opt/llvm/lib
        echo ::set-env name=CPPFLAGS::-I/usr/local/opt/llvm/include
        echo ::set-env name=AR::llvm-ar
    - name: Set clang envvars
      if: matrix.compiler == 'clang'
      run: |
        echo ::set-env name=CC::clang-9
        echo ::set-env name=CXX::clang++
    - name: Set gcc envvars
      if: matrix.compiler == 'gcc'
      run: |
        echo ::set-env name=CC::gcc-8
        echo ::set-env name=CXX::g++-8
    - name: Run the tests
      run: |
        make -j2 test
