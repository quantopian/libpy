name: Publish Python üêç distributions üì¶ to PyPI
on:
  release:
    types: [published]

jobs:
  build-n-publish:
    name: Build and publish Python üêç distributions üì¶ to TestPyPI
    runs-on: ubuntu-18.04
    steps:
    - uses: actions/checkout@v2
      with:
        submodules: 'recursive'
    - name: Set up Python 3.8
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install python dependencies
      env:
        PYTHONWARNINGS: ignore:DEPRECATION::pip._internal.cli.base_command
      run: |
        python -m pip install --upgrade pip
        pip install numpy==1.18.1
    - name: Install c++ dependencies (ubuntu)
      run: |
        sudo apt-get -y install libsparsehash-dev doxygen
    - name: Set gcc envvars
      run: |
        echo ::set-env name=CC::gcc-8
        echo ::set-env name=CXX::g++-8
    - name: Build sdist
      run: python setup.py sdist

    - name: Publish distribution üì¶ to Test PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        skip_existing: true
        password: ${{ secrets.test_pypi_password }}
        repository_url: https://test.pypi.org/legacy/

    - name: Install from test and test running
      run: |
        pip install --extra-index-url https://test.pypi.org/simple libpy
        mkdir tmp && cd tmp && python -c 'import libpy;print(libpy.__version__)'
        pip uninstall -y libpy
        cd ..

    - name: Publish distribution üì¶ to PyPI
      uses: pypa/gh-action-pypi-publish@master
      with:
        skip_existing: true
        password: ${{ secrets.pypi_password }}

    - name: Install and test running
      run: |
        pip install libpy
        cd tmp && python -c 'import libpy;print(libpy.__version__)'
        cd ..

    - name: Build the docs
      run: |
        pip install sphinx sphinx_rtd_theme breathe ipython
        make docs

    - name: Deploy the docs
      uses: peaceiris/actions-gh-pages@v3
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: ./docs/build/html
