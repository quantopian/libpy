steps:

- label: ":docker: [py27] build"
  key: "py27-build"
  plugins:
    - docker-compose#v3.1.0:
        build:
          - libpy27
        image-name: ${BUILDKITE_BRANCH}-${BUILDKITE_BUILD_NUMBER}
        image-repository: 997938224961.dkr.ecr.us-east-1.amazonaws.com/libpy
        cache-from:
          - libpy27:997938224961.dkr.ecr.us-east-1.amazonaws.com/libpy:py27-${BUILDKITE_BRANCH}
          - libpy27:997938224961.dkr.ecr.us-east-1.amazonaws.com/libpy:py27-ci-cache
        push: libpy27:997938224961.dkr.ecr.us-east-1.amazonaws.com/libpy:py27-${BUILDKITE_BRANCH}

- label: ":docker: [py35] build"
  key: "py35-build"
  plugins:
    - docker-compose#v3.1.0:
        build:
          - libpy35
        image-name: py3-${BUILDKITE_BRANCH}-${BUILDKITE_BUILD_NUMBER}
        image-repository: 997938224961.dkr.ecr.us-east-1.amazonaws.com/libpy
        cache-from:
          - libpy35:997938224961.dkr.ecr.us-east-1.amazonaws.com/libpy:py35-${BUILDKITE_BRANCH}
          - libpy35:997938224961.dkr.ecr.us-east-1.amazonaws.com/libpy:py35-ci-cache
        push: libpy35:997938224961.dkr.ecr.us-east-1.amazonaws.com/libpy:py35-${BUILDKITE_BRANCH}

- label: ":docker: [py36] build"
  key: "py36-build"
  plugins:
    - docker-compose#v3.1.0:
        build:
          - libpy36
        image-name: py3-${BUILDKITE_BRANCH}-${BUILDKITE_BUILD_NUMBER}
        image-repository: 997938224961.dkr.ecr.us-east-1.amazonaws.com/libpy
        cache-from:
          - libpy36:997938224961.dkr.ecr.us-east-1.amazonaws.com/libpy:py36-${BUILDKITE_BRANCH}
          - libpy36:997938224961.dkr.ecr.us-east-1.amazonaws.com/libpy:py36-ci-cache
        push: libpy36:997938224961.dkr.ecr.us-east-1.amazonaws.com/libpy:py36-${BUILDKITE_BRANCH}


# Run libpy tests for Python 2.
- label: ":python: tox py27 (release)"
  key: "py27-test"
  depends_on: "py27-build"
  command:
    - cd /src/libpy
    - tox -e py27-release
  timeout_in_minutes: 10
  plugins:
  - docker-compose#v3.1.0:
      run: libpy27
      shell: ["/bin/bash", "-c"]

# Run libpy tests for Python 2.
- label: ":python: tox py35 (release)"
  key: "py35-test"
  depends_on: "py35-build"
  command:
    - cd /src/libpy
    - tox -e py35-release
  timeout_in_minutes: 10
  plugins:
  - docker-compose#v3.1.0:
      run: libpy35
      shell: ["/bin/bash", "-c"]

# Run libpy tests for Python 2.
- label: ":python: tox py36 (release)"
  key: "py36-test"
  depends_on: "py36-build"
  command:
    - cd /src/libpy
    - tox -e py36-release
  timeout_in_minutes: 10
  plugins:
  - docker-compose#v3.1.0:
      run: libpy36
      shell: ["/bin/bash", "-c"]


- wait:

# Push CI cache image for use in future builds. We don't use
# "staging-deployed" for this like we do with most builds because libpy is
# never deployed standalone.
- label: ":docker: docker push ci-cache"
  plugins:
    - docker-compose#v3.1.0:
        push:
          - libpy27:997938224961.dkr.ecr.us-east-1.amazonaws.com/libpy:py27-ci-cache
          - libpy35:997938224961.dkr.ecr.us-east-1.amazonaws.com/libpy:py35-ci-cache
          - libpy36:997938224961.dkr.ecr.us-east-1.amazonaws.com/libpy:py36-ci-cache
  branches: "master"
  concurrency: 1
  concurrency_group: "libpy/ecr-push"
